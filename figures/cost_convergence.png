# Simulated convergence plot
import matplotlib.pyplot as plt

plt.figure(figsize=(8, 5))
iters = np.arange(1, 61)
loss = 0.05 / (1 + 0.1 * iters) + 0.001 * np.random.randn(len(iters))
plt.plot(iters, loss, 'b-o', label='QAOA Objective', markersize=3)
plt.axhline(y=0.0412, color='r', linestyle='--', label='Gurobi Optimal')
plt.title('QAOA Cost Convergence (p=3)')
plt.xlabel('Iteration')
plt.ylabel('Cost Function Value')
plt.legend()
plt.grid(alpha=0.3)
plt.savefig('figures/cost_convergence.png', dpi=150, bbox_inches='tight')
plt.show()
